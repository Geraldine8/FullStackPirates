{"ast":null,"code":"import _classCallCheck from \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/src/containers/raids/RaidContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport RaidList from '../../components/raids/RaidList';\nimport RaidDetail from '../../components/raids/RaidDetail';\nimport Request from '../../helpers/request';\n\nvar RaidContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RaidContainer, _Component);\n\n  function RaidContainer(props) {\n    var _this;\n\n    _classCallCheck(this, RaidContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RaidContainer).call(this, props));\n    _this.state = {\n      raids: []\n    };\n    return _this;\n  }\n\n  _createClass(RaidContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get('/api/raids').then(function (data) {\n        _this2.setState({\n          raids: data._embedded.raids\n        });\n      });\n    }\n  }, {\n    key: \"findRaidById\",\n    value: function findRaidById(id) {\n      return this.state.raids.find(function (raid) {\n        return raid.id === parseInt(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/raids/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n\n          var ship = _this3.findRaidById(id);\n\n          return React.createElement(RaidDetail, {\n            raid: ship,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        render: function render(props) {\n          return React.createElement(RaidList, {\n            raids: _this3.state.raids,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return RaidContainer;\n}(Component);\n\nexport default RaidContainer;","map":{"version":3,"sources":["/Users/geraldine/codeclan_work/week_14/day_2/all_pirates_start_point/src/containers/raids/RaidContainer.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","RaidList","RaidDetail","Request","RaidContainer","props","state","raids","request","get","then","data","setState","_embedded","id","find","raid","parseInt","match","params","ship","findRaidById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFgB;AAKjB;;;;wCAEkB;AAAA;;AACjB,UAAMC,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEI,IAAI,CAACE,SAAL,CAAeN;AAAvB,SAAd;AACD,OAHD;AAID;;;iCAEYO,E,EAAG;AACd,aAAO,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,IAAjB,CAAsB,UAACC,IAAD,EAAS;AACpC,eAAOA,IAAI,CAACF,EAAL,KAAYG,QAAQ,CAACH,EAAD,CAA3B;AACD,OAFM,CAAP;AAGD;;;6BAGO;AAAA;;AACN,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,MAAM,EAAE,gBAACT,KAAD,EAAW;AAChD,cAAMS,EAAE,GAAGT,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBL,EAA9B;;AACA,cAAMM,IAAI,GAAG,MAAI,CAACC,YAAL,CAAkBP,EAAlB,CAAb;;AACA,iBAAO,oBAAC,UAAD;AAAY,YAAA,IAAI,EAAEM,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACC,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAME,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,gBAACf,KAAD,EAAW;AACxB,iBAAO,oBAAC,QAAD;AAAU,YAAA,KAAK,EAAE,MAAI,CAACC,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF,CADF;AAiBD;;;;EAzCyBZ,S;;AA6C5B,eAAeS,aAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport RaidList from '../../components/raids/RaidList';\nimport RaidDetail from '../../components/raids/RaidDetail';\nimport Request from '../../helpers/request';\n\nclass RaidContainer extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      raids: []\n    }\n  }\n\n  componentDidMount(){\n    const request = new Request();\n    request.get('/api/raids')\n    .then((data) => {\n      this.setState({raids: data._embedded.raids})\n    })\n  }\n\n  findRaidById(id){\n    return this.state.raids.find((raid) =>{\n      return raid.id === parseInt(id);\n    })\n  }\n\n\n  render(){\n    return (\n      <Router>\n        <Fragment>\n          <Switch>\n          <Route exact path=\"/raids/:id\" render={(props) => {\n            const id = props.match.params.id;\n            const ship = this.findRaidById(id);\n            return <RaidDetail raid={ship}/>\n            }}/>\n            <Route render={(props) => {\n              return <RaidList raids={this.state.raids}/>\n            }}/>\n          </Switch>\n        </Fragment>\n      </Router>\n    )\n\n  }\n\n}\n\nexport default RaidContainer;\n"]},"metadata":{},"sourceType":"module"}